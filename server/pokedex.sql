-- MySQL Script generated by MySQL Workbench
-- Mon Dec 23 16:54:45 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Pokedex
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Pokedex
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Pokedex` DEFAULT CHARACTER SET utf8 ;
USE `Pokedex` ;

-- -----------------------------------------------------
-- Table `Pokedex`.`Eggsgroup`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pokedex`.`Eggsgroup` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Pokedex`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pokedex`.`User` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Pokedex`.`Talent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pokedex`.`Talent` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` TINYTEXT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Pokedex`.`Type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pokedex`.`Type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `picture` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Pokedex`.`Capacity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pokedex`.`Capacity` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` TINYTEXT NOT NULL,
  `power` DECIMAL NULL,
  `precision` DECIMAL NULL,
  `Type_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Capacity_Type1_idx` (`Type_id` ASC) ,
  CONSTRAINT `fk_Capacity_Type1`
    FOREIGN KEY (`Type_id`)
    REFERENCES `Pokedex`.`Type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Pokedex`.`Pokemon`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pokedex`.`Pokemon` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `number` DECIMAL NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `picture` VARCHAR(255) NOT NULL,
  `sprite` VARCHAR(255) NOT NULL,
  `spriteShiny` VARCHAR(255) NOT NULL,
  `description` TINYTEXT NOT NULL,
  `Eggsgroup_id` INT NOT NULL,
  `Talent_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Pokemon_Eggsgroup1_idx` (`Eggsgroup_id` ASC) ,
  INDEX `fk_Pokemon_Talent1_idx` (`Talent_id` ASC) ,
  CONSTRAINT `fk_Pokemon_Eggsgroup1`
    FOREIGN KEY (`Eggsgroup_id`)
    REFERENCES `Pokedex`.`Eggsgroup` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pokemon_Talent1`
    FOREIGN KEY (`Talent_id`)
    REFERENCES `Pokedex`.`Talent` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Pokedex`.`User_has_listOfPokemon`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pokedex`.`User_has_listOfPokemon` (
  `User_id` INT NOT NULL,
  `Pokemon_id` INT NOT NULL,
  PRIMARY KEY (`User_id`, `Pokemon_id`),
  INDEX `fk_User_has_Pokemon_Pokemon1_idx` (`Pokemon_id` ASC) ,
  INDEX `fk_User_has_Pokemon_User_idx` (`User_id` ASC) ,
  CONSTRAINT `fk_User_has_Pokemon_User`
    FOREIGN KEY (`User_id`)
    REFERENCES `Pokedex`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Pokemon_Pokemon1`
    FOREIGN KEY (`Pokemon_id`)
    REFERENCES `Pokedex`.`Pokemon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Pokedex`.`TypeList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pokedex`.`TypeList` (
  `Pokemon_id` INT NOT NULL,
  `Type_id` INT NOT NULL,
  PRIMARY KEY (`Pokemon_id`, `Type_id`),
  INDEX `fk_Pokemon_has_Type_Type1_idx` (`Type_id` ASC) ,
  INDEX `fk_Pokemon_has_Type_Pokemon1_idx` (`Pokemon_id` ASC) ,
  CONSTRAINT `fk_Pokemon_has_Type_Pokemon1`
    FOREIGN KEY (`Pokemon_id`)
    REFERENCES `Pokedex`.`Pokemon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pokemon_has_Type_Type1`
    FOREIGN KEY (`Type_id`)
    REFERENCES `Pokedex`.`Type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Pokedex`.`Weaknesslist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pokedex`.`Weaknesslist` (
  `Type_id` INT NOT NULL,
  `Type_id1` INT NOT NULL,
  PRIMARY KEY (`Type_id`, `Type_id1`),
  INDEX `fk_Type_has_Type_Type2_idx` (`Type_id1` ASC) ,
  INDEX `fk_Type_has_Type_Type1_idx` (`Type_id` ASC) ,
  CONSTRAINT `fk_Type_has_Type_Type1`
    FOREIGN KEY (`Type_id`)
    REFERENCES `Pokedex`.`Type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Type_has_Type_Type2`
    FOREIGN KEY (`Type_id1`)
    REFERENCES `Pokedex`.`Type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Pokedex`.`Resistlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pokedex`.`Resistlist` (
  `Type_id` INT NOT NULL,
  `Type_id1` INT NOT NULL,
  PRIMARY KEY (`Type_id`, `Type_id1`),
  INDEX `fk_Type_has_Type_Type4_idx` (`Type_id1` ASC) ,
  INDEX `fk_Type_has_Type_Type3_idx` (`Type_id` ASC) ,
  CONSTRAINT `fk_Type_has_Type_Type3`
    FOREIGN KEY (`Type_id`)
    REFERENCES `Pokedex`.`Type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Type_has_Type_Type4`
    FOREIGN KEY (`Type_id1`)
    REFERENCES `Pokedex`.`Type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Pokedex`.`Immunlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pokedex`.`Immunlist` (
  `Type_id` INT NOT NULL,
  `Type_id1` INT NOT NULL,
  PRIMARY KEY (`Type_id`, `Type_id1`),
  INDEX `fk_Type_has_Type_Type6_idx` (`Type_id1` ASC) ,
  INDEX `fk_Type_has_Type_Type5_idx` (`Type_id` ASC) ,
  CONSTRAINT `fk_Type_has_Type_Type5`
    FOREIGN KEY (`Type_id`)
    REFERENCES `Pokedex`.`Type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Type_has_Type_Type6`
    FOREIGN KEY (`Type_id1`)
    REFERENCES `Pokedex`.`Type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Pokedex`.`VeryEffectiveList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pokedex`.`VeryEffectiveList` (
  `Type_id` INT NOT NULL,
  `Type_id1` INT NOT NULL,
  PRIMARY KEY (`Type_id`, `Type_id1`),
  INDEX `fk_Type_has_Type_Type8_idx` (`Type_id1` ASC) ,
  INDEX `fk_Type_has_Type_Type7_idx` (`Type_id` ASC) ,
  CONSTRAINT `fk_Type_has_Type_Type7`
    FOREIGN KEY (`Type_id`)
    REFERENCES `Pokedex`.`Type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Type_has_Type_Type8`
    FOREIGN KEY (`Type_id1`)
    REFERENCES `Pokedex`.`Type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Pokedex`.`NotEffectiveList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pokedex`.`NotEffectiveList` (
  `Type_id` INT NOT NULL,
  `Type_id1` INT NOT NULL,
  PRIMARY KEY (`Type_id`, `Type_id1`),
  INDEX `fk_Type_has_Type_Type10_idx` (`Type_id1` ASC) ,
  INDEX `fk_Type_has_Type_Type9_idx` (`Type_id` ASC) ,
  CONSTRAINT `fk_Type_has_Type_Type9`
    FOREIGN KEY (`Type_id`)
    REFERENCES `Pokedex`.`Type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Type_has_Type_Type10`
    FOREIGN KEY (`Type_id1`)
    REFERENCES `Pokedex`.`Type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Pokedex`.`UneffectiveList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pokedex`.`UneffectiveList` (
  `Type_id` INT NOT NULL,
  `Type_id1` INT NOT NULL,
  PRIMARY KEY (`Type_id`, `Type_id1`),
  INDEX `fk_Type_has_Type_Type12_idx` (`Type_id1` ASC) ,
  INDEX `fk_Type_has_Type_Type11_idx` (`Type_id` ASC) ,
  CONSTRAINT `fk_Type_has_Type_Type11`
    FOREIGN KEY (`Type_id`)
    REFERENCES `Pokedex`.`Type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Type_has_Type_Type12`
    FOREIGN KEY (`Type_id1`)
    REFERENCES `Pokedex`.`Type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Pokedex`.`TalentList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pokedex`.`TalentList` (
  `Talent_id` INT NOT NULL,
  `Pokemon_id` INT NOT NULL,
  PRIMARY KEY (`Talent_id`, `Pokemon_id`),
  INDEX `fk_Talent_has_Pokemon_Pokemon1_idx` (`Pokemon_id` ASC) ,
  INDEX `fk_Talent_has_Pokemon_Talent1_idx` (`Talent_id` ASC) ,
  CONSTRAINT `fk_Talent_has_Pokemon_Talent1`
    FOREIGN KEY (`Talent_id`)
    REFERENCES `Pokedex`.`Talent` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Talent_has_Pokemon_Pokemon1`
    FOREIGN KEY (`Pokemon_id`)
    REFERENCES `Pokedex`.`Pokemon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Pokedex`.`CapacityWhenUp`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pokedex`.`CapacityWhenUp` (
  `Capacity_id` INT NOT NULL,
  `Pokemon_id` INT NOT NULL,
  PRIMARY KEY (`Capacity_id`, `Pokemon_id`),
  INDEX `fk_Capacity_has_Pokemon_Pokemon1_idx` (`Pokemon_id` ASC) ,
  INDEX `fk_Capacity_has_Pokemon_Capacity1_idx` (`Capacity_id` ASC) ,
  CONSTRAINT `fk_Capacity_has_Pokemon_Capacity1`
    FOREIGN KEY (`Capacity_id`)
    REFERENCES `Pokedex`.`Capacity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Capacity_has_Pokemon_Pokemon1`
    FOREIGN KEY (`Pokemon_id`)
    REFERENCES `Pokedex`.`Pokemon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Pokedex`.`CapacityByCT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pokedex`.`CapacityByCT` (
  `Capacity_id` INT NOT NULL,
  `Pokemon_id` INT NOT NULL,
  PRIMARY KEY (`Capacity_id`, `Pokemon_id`),
  INDEX `fk_Capacity_has_Pokemon_Pokemon2_idx` (`Pokemon_id` ASC) ,
  INDEX `fk_Capacity_has_Pokemon_Capacity2_idx` (`Capacity_id` ASC) ,
  CONSTRAINT `fk_Capacity_has_Pokemon_Capacity2`
    FOREIGN KEY (`Capacity_id`)
    REFERENCES `Pokedex`.`Capacity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Capacity_has_Pokemon_Pokemon2`
    FOREIGN KEY (`Pokemon_id`)
    REFERENCES `Pokedex`.`Pokemon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Pokedex`.`CapacityByBreading`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pokedex`.`CapacityByBreading` (
  `Pokemon_id` INT NOT NULL,
  `Capacity_id` INT NOT NULL,
  PRIMARY KEY (`Pokemon_id`, `Capacity_id`),
  INDEX `fk_Pokemon_has_Capacity_Capacity1_idx` (`Capacity_id` ASC) ,
  INDEX `fk_Pokemon_has_Capacity_Pokemon1_idx` (`Pokemon_id` ASC) ,
  CONSTRAINT `fk_Pokemon_has_Capacity_Pokemon1`
    FOREIGN KEY (`Pokemon_id`)
    REFERENCES `Pokedex`.`Pokemon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pokemon_has_Capacity_Capacity1`
    FOREIGN KEY (`Capacity_id`)
    REFERENCES `Pokedex`.`Capacity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Pokedex`.`CapacityByTheGuy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Pokedex`.`CapacityByTheGuy` (
  `Capacity_id` INT NOT NULL,
  `Pokemon_id` INT NOT NULL,
  PRIMARY KEY (`Capacity_id`, `Pokemon_id`),
  INDEX `fk_Capacity_has_Pokemon_Pokemon3_idx` (`Pokemon_id` ASC) ,
  INDEX `fk_Capacity_has_Pokemon_Capacity3_idx` (`Capacity_id` ASC) ,
  CONSTRAINT `fk_Capacity_has_Pokemon_Capacity3`
    FOREIGN KEY (`Capacity_id`)
    REFERENCES `Pokedex`.`Capacity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Capacity_has_Pokemon_Pokemon3`
    FOREIGN KEY (`Pokemon_id`)
    REFERENCES `Pokedex`.`Pokemon` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
